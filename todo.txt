# 任务安排：
## 序列1 end time :
	*	net需要重新调整:不再进行性能测试。
		*	功能需求：
			*	base link：
				*	需要支持二进制流的数据接收和发送功能。
				*	需要支持私有协议解析二进制流：从流到包，以及从包到流的双向支持。
					*	外界推送和获取包都支持批量获取的(通过packer内的conneckey队列)。
				*	支持套接字的连接和断开请求：连接支持socket，断开支持connectkey的入参方式。（libevent底层导致。）
				*	支持链接成功后的回调函数(不支持带锁的回调，如果带锁回调死锁，会导致整个连接出问题。)。
				*	支持错误/断开后的回调函数(不支持带锁的回调，如果带锁回调死锁，会导致整个连接出问题。)。
			*	外部接口调整。
				*	注释：如果使用多线程监听，要自行再构建。但暂时只注释不支持。	
		*	编写新的测试脚本。包含server和client。
			*	server端不延时。client端100个客户端并发（10B/ms--10MS发送100）
			*	查看client这样是否会崩溃
			*	查看server端是否会崩溃
			*	要求：1MB/s(家里的老笔记本).客户端是否淘汰下来的主机。
		*	连通和数据准确性测试合并。并且增加对应脚本。
			*	tail日志。

	*	tool的公共函数拆分。

## 序列2 end time :
	*	结构调整。
		*	所有链接使用动态库。
		*	个人代码根据文件生成对应的动态库：同时增加子makefile
		*	主makefile将能实现根据参数生成不同的可执行文件（执行端）
			*	通过此种方式生成不同的分布执行服务。
	*	调整vim的功能应用:可直接应用于源码环境。
		1	自动补全
		2	查找功能
		3	tab功能
		4	查找上一个打开的文件（而不是缓存顺序）
	*	穿插可以对freedom的一些设计文档做补全。

## 序列3 end time :
	*	collection测试。
	*	freedom结构和框架。
		* 需要阅读相关文档
		* gate gameserver mapserver and so on.
	*	数据库服务器：维持连接，暂不缓存。

# 不紧急任务
	*	vim F4 UpdateTags 增加报错提醒。
	*	(不紧急)tmux
		1	配置保存（关机后）
		2	专门的top页
		3	window命名设置。
		

